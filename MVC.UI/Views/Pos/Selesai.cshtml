
@model IEnumerable<Web.Dto.POS_TransactionDbo>
@{
    var Item = Model.FirstOrDefault();
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

}


<style>
    .ui-autocomplete {
        max-height: 100px;
        overflow-y: auto;
    }

    .ui-autocomplete {
        height: 100px;
    }
</style>


<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>Data Transaksi</h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Transaksi</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <!-- Default box -->
    <div class="box">
        <div class="box-header with-border">
            <h3 class="box-title">Tambah Data Transaksi Laundry</h3>
        </div>
        <div class="box-body">

            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "saveform", @class = "form-horizontal", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => Item.transaction_id)

            <div class="form-group">
                <div class="col-sm-2 control-label">Type</div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => Item.transaction_type, new { @class = "form-control", placeholder = "Room", required = "required", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => Item.transaction_type)

                </div>
                <div class="col-sm-1 control-label"> </div>
                <div class="col-sm-2">
                    
                </div>
                <div class="col-sm-2 control-label">Transaction ID </div>
                <div class="col-sm-2">
                    <td>@Html.TextBoxFor(model => Item.transaction_id, new { id = "transid", @readonly = "readonly" })</td>
                    @Html.ValidationMessageFor(model => Item.transaction_id)
                </div>
                
            </div>
            <div class="form-group">
                <div class="col-sm-2 control-label">Nama Pelanggan</div>
                <div class="col-sm-3">
                    @*<input id="auto-complete">*@
                    @*@Html.EditorFor(model => Item.customer_name, new { htmlAttributes = new { @class = "form-control", placeholder = "Nama Pelanggan", disabled = "disabled", onkeyup = "DeleteRowOnGrid()" } })*@
                    @Html.TextBoxFor(model => Item.customer_name,  new { @class = "form-control", placeholder = "Nama Pelanggan", disabled = "disabled", onkeyup = "DeleteRowOnGrid(this);"} )
                </div>
                <div class="col-sm-1 control-label">Room </div>
                <div class="col-sm-2">
                    @Html.TextBoxFor(model => Item.room, new { @class = "form-control", placeholder = "Room", required = "required", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => Item.room)
                </div>
                <div class="col-sm-2 control-label">Tanggal Terima </div>
                <div class="col-sm-2">
                    @Html.TextBoxFor(model => Item.transaction_date, new { @class = "form-control", placeholder = "Tipe Konsumen", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => Item.customer_type)
                </div>
                @*<div class="col-sm-1 control-label">CustID</div>
        <div class="col-sm-2">
            @Html.TextBoxFor(model => Item.customerid, new { @class = "form-control", placeholder = "Customer ID", disabled = "disabled" })
            @Html.ValidationMessageFor(model => Item.customerid)

        </div>

        <div class="col-sm-1 control-label">Tipe </div>
        <div class="col-sm-3">
            @Html.TextBoxFor(model => Item.customer_type, new { @class = "form-control", placeholder = "Tipe Konsumen", disabled = "disabled" })
            @Html.ValidationMessageFor(model => Item.customer_type)
        </div>*@
            </div>
            <div class="form-group">
                <div class="col-sm-2 control-label">Alamat Pelanggan</div>
                <div class="col-sm-6">
                    @Html.TextAreaFor(model => Item.customer_address, new { @class = "form-control", placeholder = "Alamat Pelanggan", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => Item.customer_address)
                </div>
                <div class="col-sm-2 control-label">Tanggal Selesai </div>
                <div class="col-sm-2">
                    @Html.TextBoxFor(model => Item.finishdate, new { @class = "form-control", placeholder = "Tanggal Selesai", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => Item.finishdate)
                </div>

            </div>
                <table id="tabelPaket" class="table table-bordered table-striped  table-sm table-warning table-hover" border="1">
                    <thead>
                        <tr class="bg-danger">

                            <th class="text-center" style="vertical-align: middle; padding: 0 ">
                                Item's
                            </th>
                            <th class="text-center" style="vertical-align: middle; padding: 0; text-align: center">
                                Harga Laundry
                            </th>
                            <th class="text-center" style="vertical-align: middle; padding: 0 ; text-align:center ">
                                Qty Laundry
                            </th>
                            <th class="text-center" >
                                Qty Selesai
                            </th>
                            <th class="text-center">
                                Harga Dry Cleaning
                            </th>
                            <th class="text-center" >
                                Qty Dry Cleaning
                            </th>
                            <th class="text-center" >
                                Qty Selesai Dry Cleaning
                            </th>
                            <th class="text-center" >
                                Subtotal Qty
                            </th>
                            <th class="text-center">
                                Subtotal
                            </th>
                            <th style="display:none;">
                                id
                            </th>

                            
                        </tr>
                        <tr class="bg-danger">
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>

                                <td style="text-align:left">
                                    @Html.DisplayFor(modelItem => item.nama_item)
                                </td>
                                <td style="text-align:center">
                                    @Html.DisplayFor(modelItem => item.service_laundry_price)
                                </td>
                                <td style="text-align:center">
                                    @Html.DisplayFor(modelItem => item.service_laundry_qty)
                                </td>

                                <td style='text-align:center'><input type='text' id='qty_laundry_selesai'name='qty_laundry_selesai' value=@item.service_laundry_qty style='width:50px;text-align:right;'onkeydown='return ValidateNumber(event);' onkeyup='myFunction(this.value)'></td>


                                <td style="text-align:center">
                                    @Html.DisplayFor(modelItem => item.service_drycleaning_price)
                                </td>
                                <td style="text-align:center">
                                    @Html.DisplayFor(modelItem => item.service_drycleaning_qty)
                                </td>

                                <td style='text-align:center'><input type='text' id='qty_dryclean_selesai' 
                                                                     name='qty_dryclean_selesai' 
                                                                     value=@item.service_drycleaning_qty 
                                                                     style='width:50px;text-align:right;' 
                                                                     onkeydown='return ValidateNumber(event);'
                                                                     onkeyup='HitungSelesai_Dry(this.value)'></td>


                                <td style="text-align:center">
                                    @Html.DisplayFor(modelItem => item.subtotal_qty)
                                </td>
                                <td style="text-align:right">
                                    @Html.DisplayFor(modelItem => item.total_harga)
                                </td>
                                <td style="display:none;">
                                    @Html.DisplayFor(modelItem => item.id)
                                </td>


                            </tr>
                        }
                    </tbody>
                </table>
                <div class="form-group">
                    <div class="col-sm-10 control-label"></div>
                    <div class="col-sm-2">
                        @if (Item.finish_by == null || Item.finish_by == "")
                        {

                        }
                        else
                        {
                            <img src="@Url.Content("~/Images/selesai.png")" class="img-thumbnail" alt="User Image" width="300px" height="10px">
                        }
                    </div>


                    @if (Item.finish_by == null || Item.finish_by == "")
                    {
                        <div class="col-sm-10 control-label"> </div>
                        <div class="col-sm-2" style="text-align:right">
                            <button type="button" name="hitungTotal" class="btn btn-success" onclick="HitungUlang()"><i class="fa fa-hourglass-start"></i>&nbsp;&nbsp;Hitung Ulang</button>
                        </div>
                    }

                    <div class="col-sm-10 control-label">Total </div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(model => Item.Nilai, new { id = "nilai_total", @class = "form-control", @readonly = "readonly", @style = "text-align:right" })
                        @Html.ValidationMessageFor(model => Item.Nilai)
                    </div>
                    <div class="col-sm-10 control-label">Disc </div>
                    <div class="col-sm-2">
                        @if (Item.finish_by == null || Item.finish_by == "")
                        {
                            @Html.TextBoxFor(model => Item.disc, new { id = "nilai_disc", onkeyup = "return calculatedisc(this)", onkeydown = "return ValidateNumber(event);", @class = "form-control", placeholder = "Disc", @style = "text-align:right", @value = "0" })
                            @Html.ValidationMessageFor(model => Item.disc)
                        }
                        else
                        {
                            @Html.TextBoxFor(model => Item.disc, new { id = "nilai_disc", onkeyup = "return calculatedisc(this)", onkeydown = "return ValidateNumber(event);", @class = "form-control", placeholder = "Disc", @style = "text-align:right", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => Item.disc)
                        }

                    </div>
                    <div class="col-sm-10 control-label">Ppn</div>
                    <div class="col-sm-2">
                        @if (Item.finish_by == null || Item.finish_by == "")
                        {
                            @Html.TextBoxFor(model => Item.ppn, new { id = "nilai_ppn", onkeyup = "calculateppn(this);", onkeydown = "return ValidateNumber(event);", @class = "form-control", placeholder = "Ppn", @style = "text-align:right", @value = "0" })
                            @Html.ValidationMessageFor(model => Item.ppn)
                        }
                        else
                        {
                            @Html.TextBoxFor(model => Item.ppn, new { id = "nilai_ppn", onkeyup = "calculateppn(this);", onkeydown = "return ValidateNumber(event);", @class = "form-control", placeholder = "Ppn", @style = "text-align:right", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => Item.ppn)
                        }

                    </div>
                    <div class="col-sm-10 control-label">Grand Total</div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(model => Item.grand_total, new { id = "nilai_grandtotal", @class = "form-control", placeholder = "Grand Total", disabled = "disabled", @style = "text-align:right" })
                        @Html.ValidationMessageFor(model => Item.grand_total)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-10"></div>
                    <div class="col-sm-2 text-right">
                        @if (Item.finish_by == null || Item.finish_by == "")
                        {
                           
                            <button type="submit" name="savedata" class="btn btn-success" hidden="hidden"><i class="fa fa-save"></i>&nbsp;&nbsp;Simpan</button>
                        }
                        else
                        {
                            @*<button class="btn btn-primary"><i class="fa fa-save"></i>&nbsp;&nbsp;Print</button>*@
                            <a class="btn btn-primary fa fa-print " href="@Url.Action("print_penyerahan", new { tr_id = Item.transaction_id })" role="button">Print</a>

                        }

                    </div>
                </div>
            }
            <div>
                <a href="@Url.Action("Index")"><i class="fa fa-reply"></i>&nbsp;&nbsp;Kembali</a>
            </div>

        </div>
        <!-- /.box-body -->
    </div>
    <!-- /.box -->
</section>
<!-- /.content -->

<script type="text/javascript">


    function ValidateNumber(e) {
        var charCode;
        if (e.keyCode > 0) {
            charCode = e.which || e.keyCode;
        }
        else if (typeof (e.charCode) != "undefined") {
            charCode = e.which || e.keyCode;
        }

        if (charCode == 46)
            return true;
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    };

    
    $('#saveform').submit(function () {
        var sTableName = document.getElementById("tabelPaket");
        var _transid = $("#transid").val(); 
       //update detail =============================================
        var rows = [];
        for (var i = 2; i < sTableName.rows.length; i++) {
            var _id = sTableName.rows[i].cells[9].innerText.trim();
            var _harga_laundry = sTableName.rows[i].cells[1].innerText.trim();
            var _qty_selesai_laundry = sTableName.rows[i].cells[3].firstChild.value;

            var _harga_dryclean = sTableName.rows[i].cells[4].innerText.trim();
            var _qty_selesai_dryClean = sTableName.rows[i].cells[6].firstChild.value;

            var row = _id + "|" + _harga_laundry + "|" + _qty_selesai_laundry + "|" + _harga_dryclean + "|" + _qty_selesai_dryClean;
            rows.push(row);
            //alert(rows);
        }
        //detail -====================================================

        //update to header====================
       
        var _total = $("#nilai_total").val();
        var _disc = $("#nilai_disc").val();
        var _ppn = $("#nilai_ppn").val();
        var _grand_total = $("#nilai_grandtotal").val();
        var _header = _total + '|' + _disc + '|' + _ppn + '|' + _grand_total;
        //alert(_transid);
        //alert(_header);
        // header ============================
        $.post('@Url.Action("UpdateDetail", "POS")', { rows: rows, transactionid: _transid, header: _header }, function (data) { });

    });

    function calculatedisc(ctr) {
        var intNilaiTotal = $("#nilai_total").val();
        var intdisc = $("#nilai_disc").val();
        var intppn = $("#nilai_ppn").val();

        var nilai_grand_total = parseInt(intNilaiTotal);
        var total_disc = (parseInt(intdisc) / 100) * nilai_grand_total;
        var total_ppn = (parseInt(intppn) / 100) * (nilai_grand_total);
        var GT = nilai_grand_total - total_disc + total_ppn;
        $("#nilai_grandtotal").val(GT);
    };

    function calculateppn(obj) {
        var intNilaiTotal = $("#nilai_total").val();
        var intdisc = $("#nilai_disc").val();
        var intppn = $("#nilai_ppn").val();

        var nilai_grand_total = parseInt(intNilaiTotal);
        var total_disc = (parseInt(intdisc) / 100) * nilai_grand_total ;
        var total_ppn = (parseInt(intppn) / 100) * (nilai_grand_total );
        var GT = nilai_grand_total - total_disc + total_ppn;
        $("#nilai_grandtotal").val(GT);
    }

    

    function HitungUlang() {
        //alert('kadieu');
        var sTableName = document.getElementById("tabelPaket");
        var total = 0;
        var nilai_akhir = 0;
        var rows = [];
        for (var i = 2; i < sTableName.rows.length; i++) {
            var _subtotal = sTableName.rows[i].cells[8].innerText;
            total = parseFloat(total) + parseFloat(_subtotal);
        }
        $('#nilai_total').val(total);

        var intNilaiTotal = total;
        var intdisc = $("#nilai_disc").val();
        var intppn = $("#nilai_ppn").val();

        var nilai_grand_total = parseInt(intNilaiTotal);
        var total_disc = (parseInt(intdisc) / 100) * nilai_grand_total;
        var total_ppn = (parseInt(intppn) / 100) * (nilai_grand_total);
        var GT = nilai_grand_total - total_disc + total_ppn;
        $("#nilai_grandtotal").val(GT);
    }

    function DeleteRowOnGrid(r){
        alert('ok');
        var d = document.getElementById("tabelPaket");
        r.remove().row();
    }

    function myFunction(val) {
        var table = document.getElementById('tabelPaket');
        var rows = table.getElementsByTagName('tr');
        var items = '';
        var qty_laundry = '';
        var qty_laundry_selesai = val.trim();
        //alert('anda telah menginput nilai selesai ');
        for (var i = 1; i < rows.length; i++) {

            rows[i].i = i;
            rows[i].onchange = function () {

                items = table.rows[this.i].cells[0].innerHTML.trim();
                qty_laundry = table.rows[this.i].cells[2].innerHTML.trim();
                if (parseInt(qty_laundry_selesai) > parseInt(qty_laundry)) {
                    alert('qty selesai harus lebih kecil dari qty Laundry Awal!');
                    table.rows[this.i].cells[3].firstChild.value = parseInt(qty_laundry);
                    table.rows[this.i].cells[3].firstChild.focus();
                } else if (parseInt(qty_laundry_selesai) <= parseInt(qty_laundry)) {
                    //laundry
                    var harga_laundry = parseFloat(table.rows[this.i].cells[1].innerHTML.trim());
                    var qty_sls_laundry = parseInt(qty_laundry_selesai);
                    var Nilai_laundry = harga_laundry * qty_sls_laundry;
                    //laundry
                    //alert('qty: ' + qty_sls_laundry);
                    //dry_cleaning
                    var harga_dryclean = parseFloat(table.rows[this.i].cells[4].innerHTML.trim());
                    var qty_sls_dry = parseFloat(table.rows[this.i].cells[6].firstChild.value);
                    var Nilai_dryclean = harga_dryclean * qty_sls_dry;
                    //===dry_cleaning

                    table.rows[this.i].cells[7].innerHTML = parseInt(qty_sls_laundry) + parseInt(qty_sls_dry);
                    table.rows[this.i].cells[8].innerHTML = parseFloat(Nilai_laundry) + parseFloat(Nilai_dryclean);
                }
            };
        }

    }

    //HitungSelesai_Dry
    function HitungSelesai_Dry(val) {
        var table = document.getElementById('tabelPaket');
        var rows = table.getElementsByTagName('tr');
        var items = '';
        var qty_dryclean = '';
        var qty_dryclean_selesai = val.trim();
        //alert('anda telah menginput nilai selesai ');
        for (var i = 1; i < rows.length; i++) {

            rows[i].i = i;
            rows[i].onchange = function () {

                items = table.rows[this.i].cells[0].innerHTML.trim();
                qty_dryclean = table.rows[this.i].cells[5].innerHTML.trim();
                if (parseInt(qty_dryclean_selesai) > parseInt(qty_dryclean)) {
                    alert('qty selesai dry clean harus lebih kecil dari qty dry clean Awal!');
                    table.rows[this.i].cells[6].firstChild.value = parseInt(qty_dryclean);
                    table.rows[this.i].cells[6].firstChild.focus();
                } else if (parseInt(qty_dryclean_selesai) <= parseInt(qty_dryclean)) {
                    ///===laundry 
                    var harga_laundry = parseFloat(table.rows[this.i].cells[1].innerHTML.trim());
                    var qty_sls_laundry = parseFloat(table.rows[this.i].cells[3].firstChild.value);
                    var Nilai_laundry = harga_laundry * qty_sls_laundry;  
                    ///===laundry

                    ///===dry_cleaning 
                    var harga_dryclean = parseFloat(table.rows[this.i].cells[4].innerHTML.trim());
                    var qty_sls_dry = qty_dryclean_selesai;
                    var Nilai_dryclean = harga_dryclean * qty_sls_dry;
                    ///===dry_cleaning

                    table.rows[this.i].cells[7].innerHTML = parseInt(qty_sls_laundry) + parseInt(qty_sls_dry);
                    table.rows[this.i].cells[8].innerHTML = parseFloat(Nilai_laundry) + parseFloat(Nilai_dryclean);
                }
            };
        }

    }
</script>







