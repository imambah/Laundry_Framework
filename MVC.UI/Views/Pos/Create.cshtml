@model Web.Dto.POSDbo

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "-- Pilih Tipe --",
        Value = "",
        Selected = true
    });
    listItems.Add(new SelectListItem
    {
        Text = "HK / FB Linen",
        Value = "Linen",

    });
    listItems.Add(new SelectListItem
    {
        Text = "Guest / Uniform",
        Value = "Uniform",
    });
    listItems.Add(new SelectListItem
    {
        Text = "Linen & Uniform",
        Value = "Linen_Uniform",
    });

}

<style>
    .ui-autocomplete {
        max-height: 100px;
        overflow-y: auto;
    }

    .ui-autocomplete {
        height: 100px;
    }
</style>




<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>Data Transaksi</h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Transaksi</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <!-- Default box -->
    <div class="box">
        <div class="box-header with-border">
            <h3 class="box-title">Tambah Data Transaksi Laundry</h3>
        </div>
        <div class="box-body">

            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "saveform",@class = "form-horizontal", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)

            <div class="form-group">
                <div class="col-sm-2 control-label">Type</div>
                <div class="col-sm-3">
                    @Html.DropDownListFor(model => model.transaction_type, listItems, new { @class = "form-control", placeholder = "Transaction Type" })
                    @Html.ValidationMessageFor(model => model.transaction_type)

                    @*<span>HK / FB Linen : </span> @Html.RadioButton("TeaType", "Linen", true)
            <span> | Guest / Uniform: </span> @Html.RadioButton("TeaType", "Uniform", true)*@

                </div>



                <div class="col-sm-1 control-label">Room </div>
                <div class="col-sm-2">
                    @Html.TextBoxFor(model => model.room, new { @class = "form-control", placeholder = "Room", required = "required", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.room)
                </div>

                <div class="col-sm-1 control-label">Tgl Transaksi</div>
                <div class="col-sm-3">
                    @Html.TextBox("MockDateCreated", DateTime.Today.ToString("dd/MM/yyyy"), new { @disabled = "disabled" })
                    <!-- This hidden value will store your proper value that cannot be changed and will submit it properly -->
                    @Html.Hidden("DateCreated", DateTime.Today)
                </div>
            </div>
                <div class="form-group">
                    <div class="col-sm-2 control-label">Nama Pelanggan</div>
                    <div class="col-sm-3">
                        @*<input id="auto-complete">*@
                        @Html.EditorFor(model => model.customer_name, new { htmlAttributes = new { @class = "form-control", placeholder = "Nama Pelanggan", required = "required" } })
                    </div>
                    <div class="col-sm-1 control-label">CustID</div>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(model => model.customerid, new { @class = "form-control", placeholder = "Customer ID", disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.customerid)

                    </div>
                   
                    <div class="col-sm-1 control-label">Tipe </div>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(model => model.customer_type, new { @class = "form-control", placeholder = "Tipe Konsumen", disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.customer_type)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-2 control-label">Alamat Pelanggan</div>
                    <div class="col-sm-6">
                        @Html.TextAreaFor(model => model.customer_address, new { @class = "form-control", placeholder = "Alamat Pelanggan", disabled = "disabled" , required = "required" })
                        @Html.ValidationMessageFor(model => model.customer_address)
                    </div>
                    <div class="col-sm-1 control-label">Tgl Selesai </div>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(model => model.estimasi_selesai, new { @class = "form-control", placeholder = "Tgl Selesai", required = "required" })
                        @Html.ValidationMessageFor(model => model.estimasi_selesai)

                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-2 control-label"></div>
                    <div class="col-sm-6">
                    </div>
                </div>     
                <table id="tabelPaket" class="table table-bordered table-striped  table-sm table-warning table-hover" border="1">
                    <thead>
                        <tr class="bg-danger">
                            <th class="text-center" style="vertical-align: middle; padding: 0 " >
                                ID
                            </th>
                            <th class="text-center" style="vertical-align: middle; padding: 0 " >
                                Item's
                            </th>
                            <th class="text-center"  style="vertical-align: middle; padding: 0 ">
                                Qty Laundry
                            </th>
                            <th class="text-center"  style="vertical-align: middle; padding: 0 ">
                                Qty Dry Cleaning 
                            </th>
                            <th class="text-center" rowspan="2" style="vertical-align: middle; padding: 0 ">
                                Remark
                            </th>

                        </tr>
                        <tr class="bg-danger">

                        </tr>
                    </thead>
                    <tbody id="tableBody">
                    </tbody>
                </table>
                               
                <div class="form-group">
                    <div class="col-sm-10"></div>
                    <div class="col-sm-2 text-right">
                        <button type="submit" name="savedata" class="btn btn-success"><i class="fa fa-save"></i>&nbsp;&nbsp;Simpan</button>
                        @*<button class="btn btn-primary"><i class="fa fa-save"></i>&nbsp;&nbsp;Print</button>*@
                    </div>
                </div>
            }
        <div>
            <a href="@Url.Action("Index")"><i class="fa fa-reply"></i>&nbsp;&nbsp;Kembali</a>
        </div>

        </div>
        <!-- /.box-body -->
    </div>
    <!-- /.box -->
</section>
<!-- /.content -->

<script type="text/javascript">
    $(document).ready(function () {
        $("#estimasi_selesai").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'dd-mm-yy'
        });
    });

    $("#customer_name").autocomplete({
        source: function (request, response) {
            //var csname = 'Counter';
            $.ajax({
                type: "POST",
                url: "/POS/getName?Prefix=" + $('#customer_name').val(),
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                //data: { Prefix: $('#customer_name').val() },
                success: function (data) {
                    var result = $.map(data, function (item) {
                        return {
                            label: item.nama_klien,
                            value: item.alamat,
                            customertype: item.tipe_konsumen,
                            id: item.kode_klien
                        };
                    });
                    return response(result);
                }
            });
        },
        select: function (event, ui) {
            event.preventDefault();
            $('#customer_name').val(ui.item.label);
            $('#customer_address').val(ui.item.value);
            $('#customerid').val(ui.item.id);
            $('#customer_type').val(ui.item.customertype);

        }
    });

    $('#saveform').submit(function () {
        if ($("#customer_name").val() == "") {
            $("#customer_name").text("*Please enter customer name");
            return false;
        }
        else {
            SaveData();
        }
    });

    $("#transaction_type").change(function () {
        var transaction_type = $(this).val();
        if (transaction_type == 'Linen') {
            $("#room").prop('disabled', true);
        } else {
            $("#room").prop('disabled', false);
        }
        $.ajax({
            type: "post",
            url: "/POS/GetItemByType?strType=" + transaction_type,
            data: "[]",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                var output = data.map(i => "<tr><td>" + i.id + "</td><td>" + i.service + "</td><td style='text-align:center'><input type='text' id='qty_laundry' name='qty_laundry' value=0 style='width:50px;text-align:right;' onkeydown = 'return ValidateNumber(event);' ></td><td style='text-align:center'><input type='text' id='qty_drycleaning' name='qty_drycleaning' value=0 style='width:50px;text-align:right;' onkeydown = 'return ValidateNumber(event);' ></td><td><input type='text' id='remarks' name='remarks' style='width:100%;'></td></tr>");
                //var output = data.map(i => "<tr><td>" + i.id + "</td><td>" + i.service + "</td><td style='text-align:center'><input type='text' id='qty' name='qty' style='width:50px;text-align:right;' onkeydown = 'return ValidateNumber(event);' ></td><td style='text-align:center'><select id='service'><option value='laundry'>Laundry</option><option value='drycleaning'>Dry Cleaning</option></select></td><td style='text-align:center'></td><td><input type='text' id='remark' name='remark' style='width:100%;'></td></tr>");
            $("#tableBody").html(output);
            }
        })
    });

    function ValidateNumber(e) {
        var charCode;
        if (e.keyCode > 0) {
            charCode = e.which || e.keyCode;
        }
        else if (typeof (e.charCode) != "undefined") {
            charCode = e.which || e.keyCode;
        }
        if (charCode == 46)
            return true;
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    };

    function SaveData() {
        var sTableName = document.getElementById("tabelPaket");

        var date = new Date();
        var dateStr =
            date.getFullYear() +
            ("00" + (date.getMonth() + 1)).slice(-2) +
            ("00" + date.getDate()).slice(-2) +
            ("00" + date.getHours()).slice(-2) +
            ("00" + date.getMinutes()).slice(-2) +
            ("00" + date.getSeconds()).slice(-2);
        var _transid = 'TR-' + dateStr;//+ time.toString();.

        //insert detail =============================================
        var rows = [];
        for (var i = 2; i < sTableName.rows.length; i++) {
            var _id = sTableName.rows[i].cells[0].innerText;
            var _name = sTableName.rows[i].cells[1].innerText;
            var _qty_laundry = sTableName.rows[i].cells[2].firstChild.value;
            var _qty_drycleaning = sTableName.rows[i].cells[3].firstChild.value;
            var _remark = sTableName.rows[i].cells[4].firstChild.value;
            var row = _id + "|" + _name + "|" + _qty_laundry + "|" + _qty_drycleaning + "|" + _remark;
            rows.push(row);
        }
        //detail -====================================================
        //insert to header====================
        var _transactionType = $("#transaction_type").val();
        var _customer_name = $("#customer_name").val();
        var _room = $("#room").val();
        var _receiveddate = $("#receiveddate").val();
        var _customer_address = $("#customer_address").val();
        var _customer_type = $("#customer_type").val();
        var _customer_id = $("#customerid").val();
        var _estimasi_selesai = $("#estimasi_selesai").val();
        var _header = _transactionType + '|' + _transid + '|' + _customer_name + '|' + _room + '|' + _customer_address + '|' + _customer_type + '|' + _customer_id + '|' + _estimasi_selesai

        // header ============================
        $.post('@Url.Action("ProccessDetail", "POS")', { rows: rows, transactionid: _transid, header: _header }, function (data) { });

    }

    function settingDryCleaning() {
        var checkBox = document.getElementById("laundry");

        if (checkBox.checked == true) {
            document.getElementById("drycleaning").checked = false;
        } else {
            document.getElementById("drycleaning").checked = true;
        }
    }

    function settingLaundry() {
        var checkBox = document.getElementById("drycleaning");

        if (checkBox.checked == true) {
            document.getElementById("laundry").checked = false;
        } else {
            document.getElementById("laundry").checked = true;
        }
    }

</script>







